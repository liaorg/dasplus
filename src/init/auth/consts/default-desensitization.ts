import { Types } from 'mongoose';
import { DesensitizationAuthorEnum } from '@/modules/data/desensitization/enums';
import { DesensitizationCfg } from '@/modules/data/desensitization/schemas';

// 默认数据脱敏规则
export const defaultDesensitization: (DesensitizationCfg & { _id: Types.ObjectId })[] = [
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765921'),
        author: DesensitizationAuthorEnum.factory,
        description: '身份证号（15 或 18 个数字字符，最后一个字符会存在X）',
        enable: true,
        mask_public_left: 0,
        mask_public_right: 4,
        maskchr: '*',
        name: '身份证号',
        regex: '身份证号匹配算法',
        sample: '452132189007305223',
        algorithm: 'identity_number',
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765920'),
        author: DesensitizationAuthorEnum.factory,
        description: '满足 Luhn 算法的银行卡号',
        enable: true,
        mask_public_left: 0,
        mask_public_right: 4,
        maskchr: '*',
        name: '银行卡号',
        regex: '银行卡号匹配算法',
        sample: '1000000000000008',
        algorithm: 'credit_card',
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765919'),
        author: DesensitizationAuthorEnum.factory,
        description: '手机号码',
        enable: true,
        mask_public_left: 0,
        mask_public_right: 2,
        maskchr: '*',
        name: '手机号码',
        regex: '\\b1(3[0-9]|4[01456879]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\d{8}\\b',
        sample: '15888888888',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765918'),
        author: DesensitizationAuthorEnum.factory,
        description: '常规车牌号，最后一个为汉字的车牌，新军车牌',
        enable: true,
        mask_public_left: 3,
        mask_public_right: 1,
        maskchr: '*',
        name: '车牌号',
        regex: '\\B[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领使]{1}[A-Z]{1}[A-Z0-9]{4,5}[A-Z0-9挂学警港澳]{0,1}\\B',
        sample: '闽A00000',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765917'),
        author: DesensitizationAuthorEnum.factory,
        description: '军/兵/士/文/职/广/（其余中文） + 字第 + 4 到 8 位字母或数字 + 号',
        enable: true,
        mask_public_left: 3,
        mask_public_right: 1,
        maskchr: '*',
        name: '军官证',
        regex: '\\B[军兵士文职广]字第([0-9A-Z]{4,8})号?\\B',
        sample: '军字第AAAAAA00号',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765916'),
        author: DesensitizationAuthorEnum.factory,
        description: 'Email地址',
        enable: true,
        mask_public_left: 1,
        mask_public_right: 5,
        maskchr: '*',
        name: 'Email地址',
        regex: '\\b[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+\\.[a-z]{2,3}\\b',
        sample: 'test@email.com',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765915'),
        author: DesensitizationAuthorEnum.factory,
        description: '座机号码(包括国际座机号)',
        enable: true,
        mask_public_left: 0,
        mask_public_right: 4,
        maskchr: '*',
        name: '座机号码',
        regex: '\\b(\\(?0\\d{2,3}\\)-[1-9]\\d{6,7})|(([+]{1}86)?-?([1-9]{1}\\d{1,2})-[1-9]\\d{6,7})\\b',
        sample: '0591-8888888',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765914'),
        author: DesensitizationAuthorEnum.factory,
        description: 'IP地址(IPV4或IPV6地址)',
        enable: false,
        mask_public_left: 4,
        mask_public_right: 0,
        maskchr: '*',
        name: 'IP地址',
        regex: 'IP地址匹配算法',
        sample: '192.168.0.1',
        algorithm: 'ip_address',
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765913'),
        author: DesensitizationAuthorEnum.factory,
        description: 'IPV4地址',
        enable: false,
        mask_public_left: 4,
        mask_public_right: 0,
        maskchr: '*',
        name: 'IPV4地址',
        regex: 'IPV4地址匹配算法',
        sample: '192.168.0.1',
        algorithm: 'ipv4_address',
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765912'),
        author: DesensitizationAuthorEnum.factory,
        description: 'IPV6地址',
        enable: false,
        mask_public_left: 5,
        mask_public_right: 0,
        maskchr: '*',
        name: 'IPV6地址',
        regex: 'IPV6地址匹配算法',
        sample: 'FE80::7C6D:F5B3:96DD:D73F',
        algorithm: 'ipv6_address',
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765911'),
        author: DesensitizationAuthorEnum.factory,
        description: '考试通过年份 + 报考省份 + 类别代码 + 身份证号码',
        enable: false,
        mask_public_left: 4,
        mask_public_right: 4,
        maskchr: '*',
        name: '医师资格证书',
        regex: '\\b[12]\\d{8}(\\d{6}((((19|20)\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|(((19|20)\\d{2})(0[13578]|1[02])31)|((19|20)\\d{2})02(0[1-9]|1\\d|2[0-8])|((((19|20)([13579][26]|[2468][048]|0[48]))|(2000))0229))\\d{3}(\\d|X|x))|(\\d{6}(((\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|((\\d{2})(0[13578]|1[02])31)|((\\d{2})02(0[1-9]|1\\d|2[0-8]))|(([13579][26]|[2468][048]|0[048])0229))\\d{3})\\b',
        sample: '191914110152132199007305223',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765910'),
        author: DesensitizationAuthorEnum.factory,
        description:
            '执业医师级别代码 + 执业类别代码 + 省、自治区、直辖市代码 + 市代码 + 县代码 + 证书流水码',
        enable: false,
        mask_public_left: 3,
        mask_public_right: 0,
        maskchr: '*',
        name: '医师执业证书',
        regex: '\\b\\d{1}\\d{2}\\d{2}\\d{2}\\d{2}\\d{6}\\b',
        sample: '110140107000000',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765909'),
        author: DesensitizationAuthorEnum.factory,
        description: '国内电话号码(0591-8888888)',
        enable: false,
        mask_public_left: 0,
        mask_public_right: 4,
        maskchr: '*',
        name: '国内电话号码',
        regex: '\\b(0[0-9]{2,3}-)?([2-9][0-9]{6,7})+(-[0-9]{1,4})?\\b',
        sample: '0591-8888888',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765908'),
        author: DesensitizationAuthorEnum.factory,
        description:
            '机构类别(2位特定码)+地区码(6位数字)+组织机构码(8位数字/大写字母+1位数字/X)+校验码(1位数字/大写字母)',
        enable: false,
        mask_public_left: 2,
        mask_public_right: 0,
        maskchr: '*',
        name: '统一社会信用代码',
        regex: '\\b(11|12|13|19|21|31|41|51|52|53|59|61|71|81|91|92|93|99|A1|B1|C1|D1|E1|F1|G1|Y1)\\d{6}[A-HJ-NPQRTUWXY0-9]{8}[X|0-9]{1}[A-HJ-NPQRTUWXY0-9]{1}\\b',
        sample: '110000000000000000',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765907'),
        author: DesensitizationAuthorEnum.factory,
        description: '护照（包括香港和澳门）',
        enable: false,
        mask_public_left: 2,
        mask_public_right: 3,
        maskchr: '*',
        name: '护照',
        regex: '\\b(([E][A-F])|([DSP][E])|([K][J])|([M][A])|(1[45]))\\d{7}\\b',
        sample: '140000000',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765906'),
        author: DesensitizationAuthorEnum.factory,
        description: '台湾居民通行证 新版 8 位，旧版 10 位数字 + 英文字母',
        enable: false,
        mask_public_left: 2,
        mask_public_right: 1,
        maskchr: '*',
        name: '台湾通行证',
        regex: '\\b\\d{8}|^[A-Z0-9]{10}\\b',
        sample: '1000000000A',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765905'),
        author: DesensitizationAuthorEnum.factory,
        description: '港澳通行证',
        enable: false,
        mask_public_left: 1,
        mask_public_right: 1,
        maskchr: '*',
        name: '港澳通行证',
        regex: '\\b([A-Z]\\d{6,10}(\\w1)?)\\b',
        sample: 'A000000A1',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765904'),
        author: DesensitizationAuthorEnum.factory,
        description: '日期格式',
        enable: false,
        mask_public_left: 0,
        mask_public_right: 5,
        maskchr: '*',
        name: '日期',
        regex: '\\b\\d{4}-\\d{1,2}-\\d{1,2}\\b',
        sample: '2023-10-01',
        algorithm: false,
    },
    {
        // https://zhuanlan.zhihu.com/p/406217266?utm_id=0
        _id: new Types.ObjectId('6549d5249f227f6ebf765903'),
        author: DesensitizationAuthorEnum.factory,
        description: '中文姓氏开头且共 2-6 个汉字',
        enable: false,
        mask_public_left: 1,
        mask_public_right: 0,
        maskchr: '*',
        name: '中文姓名',
        regex: '\\B[\\u00B7\\u3007\\u3400-\\u9FFF\\uE000-\\uF8FF\\uF900-\\uFAFF\\u{20000}-\\u{2FFFF}\\u{30000}-\\u{3FFFF}]+\\B',
        sample: '祝英台',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765902'),
        author: DesensitizationAuthorEnum.factory,
        description: '中国邮政编码为 6 位数字',
        enable: false,
        mask_public_left: 2,
        mask_public_right: 0,
        maskchr: '*',
        name: '邮政编码',
        regex: '\\b[1-9]\\d{5}\\b',
        sample: '100000',
        algorithm: false,
    },
    {
        _id: new Types.ObjectId('6549d5249f227f6ebf765901'),
        author: DesensitizationAuthorEnum.factory,
        description: '支持正负小数，且小数位在 1 到 6 位',
        enable: false,
        mask_public_left: 1,
        mask_public_right: 1,
        maskchr: '*',
        name: '金额',
        regex: '\\b[-]?(([1-9]{1}\\d*)|([0]{1}))\\.(\\d{1,6})\\b',
        sample: '0.00',
        algorithm: false,
    },
];
